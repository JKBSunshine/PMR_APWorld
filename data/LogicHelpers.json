{
    "Boots": "(Progressive_Boots, 1)",
    "Super_Boots": "(Progressive_Boots, 2)",
    "Ultra_Boots": "(Progressive_Boots, 3)",
    "Hammer": "(Progressive_Hammer, 1)",
    "Super_Hammer": "(Progressive_Hammer, 2)",
    "Ultra_Hammer": "(Progressive_Hammer, 3)",

    "can_flip_panels": "Ultra_Hammer or Super_Boots",

    "can_shake_trees": "Bombette or Hammer",

    "can_hit_grounded_blocks": "can_use_ability_bombette or can_use_ability_kooper or Super_Boots or Hammer",
    "can_hit_floating_blocks": "can_use_ability_kooper or Boots",
    "can_hit_grounded_switches": "can_use_ability_bombette or can_use_ability_kooper or Boots or Hammer or can_use_ability_parakarry",

    "can_climb_steps": "Boots or can_use_ability_parakarry",
    "saved_all_yoshi_kids": "'RF_SavedYoshiKid_1' and 'RF_SavedYoshiKid_2' and 'RF_SavedYoshiKid_3' and 'RF_SavedYoshiKid_4' and 'RF_SavedYoshiKid_5'",
    "can_reenter_vertical_pipes": "can_use_ability_kooper or Boots or can_use_ability_parakarry",

    "has_strong_aerial_partner": "Bow or Watt or Sushie or Lakilester",
    "has_weak_aerial_partner": "Goombario or Parakarry",

    "can_pass_kent": "(not kent_c_koopa == 1) or (('STARSPIRIT', 2) and (Boots or Goombario))",
    "can_beat_all_bloopers": "(can_beat_blooper and can_beat_electro_blooper and can_beat_super_blooper)",
    "can_beat_blooper": "(Super_Boots or (Boots and has_weak_aerial_partner) or has_strong_aerial_partner) or blooper_damage_requirements < 1",
    "can_beat_electro_blooper": "(Ultra_Boots or (Super_Boots and (has_strong_aerial_partner or has_weak_aerial_partner))) or blooper_damage_requirements < 2",
    "can_beat_super_blooper": "(Ultra_Boots and has_strong_aerial_partner) or blooper_damage_requirements < 3",

    "can_see_hidden_blocks": "can_use_ability_watt or hidden_block_mode == 3",

    "has_required_spirits": "('STARSPIRIT_1' or 1 not in required_spirits) and ('STARSPIRIT_2' or 2 not in required_spirits) and ('STARSPIRIT_3' or 3 not in required_spirits) and ('STARSPIRIT_4' or 4 not in required_spirits) and ('STARSPIRIT_5' or 5 not in required_spirits) and ('STARSPIRIT_6' or 6 not in required_spirits) and ('STARSPIRIT_7' or 7 not in required_spirits)",

    "star_way_star_spirits": "('STARSPIRIT', star_way_spirits)",
    "star_way_power_stars": "(Power_Star, star_way_power_stars) or not power_star_hunt",
    "star_way_specific_spirits": "has_required_spirits or not require_specific_spirits",
    "can_reach_star_way": "star_way_star_spirits and star_way_power_stars and star_way_specific_spirits",
    "star_way_goal": "seed_goal == 1",

    "star_beam_power_stars": "(Power_Star, star_beam_power_stars) or not power_star_hunt",
    "star_beam_star_spirits": "('STARSPIRIT', star_beam_spirits)",
    "has_star_beam_requirements": "star_beam_star_spirits and star_beam_power_stars",

    "can_use_ability_kooper": "Kooper or partners_always_usable",
    "can_use_ability_bombette": "Bombette or partners_always_usable",
    "can_use_ability_parakarry": "Parakarry or partners_always_usable",
    "can_use_ability_bow": "Bow or partners_always_usable",
    "can_use_ability_watt": "Watt or partners_always_usable",
    "can_use_ability_sushie": "Sushie or partners_always_usable",
    "can_use_ability_lakilester": "Lakilester or partners_always_usable"
}